import library "MultiPlatform/IssueLibrary.xmi"
import platform "SlackPlatform"
import library "CoreLibrary"
import platform "GithubPlatform"

use provider SlackPlatform.ChatProvider

on intent Hello do
	action SlackPlatform.Reply(message : "Hi " + context(slack).get("username")
		+ "! I am the Github issue bot! How can I help you?")

on intent OpenIssue do
	action SlackPlatform.Reply(message : "Sure! Let's do it together, what is" +
		" the name of the repository you want to report an issue for?"
	)
	
on intent OpenPullRequest do
	action  SlackPlatform.Reply(message : "Sorry, I can't help you with pull requests for now :(")
	
on intent SpecifyRepository do
	action  SlackPlatform.Reply(message : "Alright, can you give me the name of the owner of the repository?")

on intent SpecifyOwner do
	action SlackPlatform.Reply(message : "Ok, so you want to report an issue for " +
		context(Repository).get("repoOwner") + "/" + context(Repository).get("repoName"))
	action SlackPlatform.Reply(message : "What is the class impacted by the issue?")

on intent SpecifyClass do
	action SlackPlatform.Reply(message : "Noted! Please give me a title for you issue (be concise, you'll be able to explain it more later :) )")
	
on intent Title do
	action SlackPlatform.Reply(message : "Now final step: could you describe me your issue?")

on intent IssueContent do
	action SlackPlatform.Reply(message : "Thanks for reporting your issue! You can check it online at "
		+ "https://github.com/" + context(Repository).get("repoOwner") +
		"/" + context(Repository).get("repoName") + "/issues")
	
	action GithubPlatform.OpenIssue(user : context(Repository).get("repoOwner"),
		repository : context(Repository).get("repoName"), 
		issueTitle : context(Issue).get("title"), 
		issueContent : "User " + context(slack).get("username") + 
			" reported an issue for class " + context(Class).get("className") + 
			"\n" +
			context(Issue).get("content"))
			
on intent Default_Fallback_Intent do
	action SlackPlatform.Reply(message : "Sorry I didn't get it :(")